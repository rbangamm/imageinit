type User {
  id: ID!
  name: String!
}

type CreateUserResult {
  token: String!
  status: String!
  error:  String!
}

input RefreshTokenInput{
  token: String!
}

input NewUser {
  username: String!
  password: String!
}

input Login {
  username: String!
  password: String!
}

type LoginResult {
  token: String!
  status: String!
  error: String!
}

type RefreshTokenResult {
  token: String!
  status: String!
  error: String!
}

type Mutation {
  createUser(input: NewUser!): CreateUserResult!
  login(input: Login!): LoginResult!
  # we'll talk about this in authentication section
  refreshToken(input: RefreshTokenInput!): RefreshTokenResult!
}